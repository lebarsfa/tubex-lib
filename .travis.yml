# ==================================================================
#  tubex-lib - travis test script
# ==================================================================

language: c++

addons:
  apt:
    sources:
    - deadsnakes
    - chef-current-precise

    packages:
    - cmake
    - python3.5

matrix:
  include:
    - name: "deployquicktest"
      os: windows
      before_install: 
      cache:
      install:
      script: 
        - wget http://www.ensta-bretagne.fr/lebars/Share/tubex_test_win.zip -nv
    # One environment for python binding:
    - sudo: true
      services:
        - docker
      env: DOCKER_IMAGE=benensta/pyibex-docker
      install:
        - docker pull $DOCKER_IMAGE
      script:
        - chmod a+x scripts/docker/build_pybinding.sh
        - docker run --rm -v `pwd`:/io $DOCKER_IMAGE /io/scripts/docker/build_pybinding.sh
        - ls wheelhouse
    # Other environments for C++ tests (g++ versions, trees..)
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
# todo  - os: linux
# todo    addons:
# todo      apt:
# todo        sources:
# todo          - ubuntu-toolchain-r-test
# todo        packages:
# todo          - g++-7
# todo    env:
# todo      - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
    - name: "Ubuntu 18.04"
      os: linux
      dist: bionic
      compiler: gcc
      before_install: 
        - sudo apt-get -q update || true
        - sudo apt-get -y install flex bison || true
      cache:
      install:
      script: 
        - if [ ! -e "ibex/include/ibex.h" ]; then ( git clone -b develop https://github.com/lebarsfa/ibex-lib.git ; cd ibex-lib ; mkdir build ; cd build ; cmake -D CMAKE_INSTALL_PREFIX="../../ibex" -D CMAKE_CXX_FLAGS="-fPIC" -D CMAKE_C_FLAGS="-fPIC" .. ; cmake --build . --target install ; cd ../.. ) else echo "Using cached directory." ; fi
        - mkdir build ; cd build
        - cmake -D CMAKE_PREFIX_PATH="ibex" -D CMAKE_INSTALL_PREFIX="../tubex" ..
        - cmake --build . --target install
        - cd ..
        # Test C++ program and bundle...
        - wget http://www.ensta-bretagne.fr/lebars/Share/tubex_test_win.zip -nv
        - unzip -q -o tubex_test_win.zip
        - rm -Rf tubex_test_win.zip
        - cd tubex_test_win
        - mv test ..
        - cd ../test
        - rm -Rf ../tubex_test_win
        - cmake .
        - cmake --build .
        - ./my_project
    - name: "Ubuntu 18.04 C++ Python 3.8"
      os: linux
      dist: bionic
      compiler: gcc
      language: python
      python: 3.8
      before_install: 
        - python --version || true
        - python3 --version || true
        - pip --version || true
        - pip3 --version || true
        - sudo python --version || true
        - sudo python3 --version || true
        - sudo pip --version || true
        - sudo pip3 --version || true
        - sudo apt-get -q update || true
        - sudo apt-get -y install flex bison || true
        - sudo apt-get -y install doxygen graphviz || true
        #
        #sudo apt-get -y install python3-pip python3-setuptools python3-wheel python3-breathe
        #sudo pip3 install --upgrade pip
        #sudo pip3 install --upgrade pyIbex
        #
        #sudo apt-get -y install python3.8-dev
        #sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.8 1
        #sudo python -m pip install --upgrade pip
        #sudo python -m pip install --upgrade pyIbex
        #sudo python -m pip install --upgrade setuptools wheel
        #
        - pip install --upgrade pip
        - pip install --upgrade pyIbex
        - pip install --upgrade setuptools wheel
      cache:
      install:
      script: 
        - if [ ! -e "ibex/include/ibex.h" ]; then ( git clone -b develop https://github.com/lebarsfa/ibex-lib.git ; cd ibex-lib ; mkdir build ; cd build ; cmake -D CMAKE_INSTALL_PREFIX="../../ibex" -D CMAKE_CXX_FLAGS="-fPIC" -D CMAKE_C_FLAGS="-fPIC" .. ; cmake --build . --target install ; cd ../.. ) else echo "Using cached directory." ; fi
        - mkdir build ; cd build
        - cmake -D CMAKE_PREFIX_PATH="ibex" -D CMAKE_INSTALL_PREFIX="../tubex" -D CMAKE_BUILD_TYPE=Debug -D WITH_PYTHON=ON -D CMAKE_CXX_FLAGS="-fPIC" ..
        - cmake --build . --target api
        - cmake -D CMAKE_PREFIX_PATH="ibex" -D CMAKE_INSTALL_PREFIX="../tubex" -D CMAKE_BUILD_TYPE=Debug -D WITH_PYTHON=ON -D CMAKE_CXX_FLAGS="-fPIC" ..
        - cmake --build . --target install
        - cmake --build . --target pip_package
        # Test python program and wheel...
        - cp *.whl ../
        #sudo pip3 install ../*.whl
        #sudo python -m pip install ../*.whl
        - pip install ../*.whl
        - python ../examples/tuto/01_getting_started/01_getting_started.py
        - cd ..
        # Test C++ program and bundle...
        - wget http://www.ensta-bretagne.fr/lebars/Share/tubex_test_win.zip -nv
        - unzip -q -o tubex_test_win.zip
        - rm -Rf tubex_test_win.zip
        - cd tubex_test_win
        - mv test ..
        - cd ../test
        - rm -Rf ../tubex_test_win
        - cmake .
        - cmake --build .
        - ./my_project
    - name: "Raspbian Buster pi Docker"
      os: linux
      dist: bionic
      compiler: gcc
      services:
        - docker
      before_install: 
        - docker run --rm --privileged multiarch/qemu-user-static:register --reset
      cache:
      install:
      script: 
         - "docker run -i -v \"${PWD}/..:${PWD}/..\" lebarsfa/pi:buster /bin/bash -c \"uname -a && cat /etc/os-release && cd ${PWD} && apt-get -q update && apt-get -y install sudo lsb-release wget unzip build-essential cmake git flex bison && lsb_release -a && git clone -b develop https://github.com/lebarsfa/ibex-lib.git && cd ibex-lib && mkdir build ; cd build && cmake -D CMAKE_INSTALL_PREFIX=../../ibex -D CMAKE_CXX_FLAGS=-fPIC -D CMAKE_C_FLAGS=-fPIC -D INTERVAL_LIB=filib .. && cmake --build . --target install && cd ../.. && git clone -b windows https://github.com/lebarsfa/tubex-lib && cd tubex-lib && git submodule init ; git submodule update && mkdir build ; cd build && cmake -D CMAKE_PREFIX_PATH=../ibex -D CMAKE_INSTALL_PREFIX=../../tubex .. && cmake --build . --target install && cd ../.. && wget http://www.ensta-bretagne.fr/lebars/Share/tubex_test_win.zip -nv && unzip -q -o tubex_test_win.zip && rm -Rf tubex_test_win.zip && cd tubex_test_win && mv -f test .. && cd ../test && rm -Rf ../tubex_test_win && make . && cmake --build . && ./my_project \""
    - name: "Mac OS Xcode 10.1"
      os: osx
      osx_image: xcode10.1
      cache:
      install:
      script: 
        - if [ ! -e "ibex/include/ibex.h" ]; then ( git clone -b develop https://github.com/lebarsfa/ibex-lib.git ; cd ibex-lib ; mkdir build ; cd build ; cmake -D CMAKE_INSTALL_PREFIX="../../ibex" -D CMAKE_CXX_FLAGS="-fPIC -Wno-everything" -D CMAKE_C_FLAGS="-fPIC -Wno-everything" .. ; cmake --build . --target install ; cd ../.. ) else echo "Using cached directory." ; fi
        - mkdir build ; cd build
        - cmake -D CMAKE_PREFIX_PATH="ibex" -D CMAKE_INSTALL_PREFIX="../tubex" ..
        - cmake --build . --target install
        - cd ..
        # Test C++ program and bundle...
        - wget http://www.ensta-bretagne.fr/lebars/Share/tubex_test_win.zip -nv
        - unzip -q -o tubex_test_win.zip
        - rm -Rf tubex_test_win.zip
        - cd tubex_test_win
        - mv test ..
        - cd ../test
        - rm -Rf ../tubex_test_win
        - cmake .
        - cmake --build .
        - ./my_project
    - name: "Windows Visual Studio 2019 x86 C++"
      os: windows
      before_install: 
        - choco install -y visualstudio2019buildtools visualstudio2019-workload-vctools winflexbison
      cache:
      install:
      script: 
        - if [ ! -e "ibex/include/ibex.h" ]; then ( git clone -b develop https://github.com/lebarsfa/ibex-lib.git ; cd ibex-lib ; mkdir build ; cd build ; cmake -G "Visual Studio 16" -A Win32 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_INSTALL_PREFIX="../../ibex" -D INTERVAL_LIB=filib .. ; cmake --build . --config Release --target install ; cd ../.. ) else echo "Using cached directory." ; fi
        - mkdir build ; cd build
        - cmake -G "Visual Studio 16" -A Win32 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_PREFIX_PATH="ibex" -D CMAKE_INSTALL_PREFIX="../tubex" ..
        - cmake --build . --config Debug --target install
        - cd ..
        # Test C++ program and bundle...
        - wget http://www.ensta-bretagne.fr/lebars/Share/tubex_test_win.zip -nv
        - 7z x tubex_test_win.zip -y
        - rm -Rf tubex_test_win.zip
        - cd tubex_test_win
        - rm -Rf ibex tubex ReadMe.txt
        - cp -Rf ../ibex .
        - cp -Rf ../tubex .
        - cd ..
        - 7z a -y tubex_test_x86_vc16.zip tubex_test_win
        - cd tubex_test_win/test
        - cmake -G "Visual Studio 16" -A Win32 .
        - cmake --build . --config Release
        - cmd //c "Release\my_project.exe"
        - cd ../..
    - name: "Windows Visual Studio 2019 x64 C++ Python 3.8"
      os: windows
      before_install: 
        - choco install -y visualstudio2019buildtools visualstudio2019-workload-vctools winflexbison
        - cmd //c "choco install -y doxygen.install graphviz & choco install -y python --version=3.8.3 & refreshenv.cmd & python -m pip install --upgrade pip & pip install --upgrade pyIbex & pip install --upgrade wheel setuptools & git clone -b v3.1.1 ttps://github.com/sphinx-doc/sphinx & cd sphinx & pip install . & pip install --upgrade breathe sphinx-tabs sphinx_rtd_theme & refreshenv.cmd"
        - export PATH=/c/Python38:/c/Python38/Scripts:$PATH
      cache:
      install:
      script: 
        - if [ ! -e "ibex/include/ibex.h" ]; then ( git clone -b develop https://github.com/lebarsfa/ibex-lib.git ; cd ibex-lib ; mkdir build ; cd build ; cmake -G "Visual Studio 16" -A x64 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_INSTALL_PREFIX="../../ibex" -D INTERVAL_LIB=filib .. ; cmake --build . --config Release --target install ; cd ../.. ) else echo "Using cached directory." ; fi
        - mkdir build ; cd build
        - cmake -G "Visual Studio 16" -A x64 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_PREFIX_PATH="ibex" -D CMAKE_INSTALL_PREFIX="../tubex" -D WITH_PYTHON=ON ..
        - cmake --build . --config Debug --target api
        - cmake -G "Visual Studio 16" -A x64 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_PREFIX_PATH="ibex" -D CMAKE_INSTALL_PREFIX="../tubex" -D WITH_PYTHON=ON ..
        - cmake --build . --config Debug --target install
        - cmake --build . --config Debug --target pip_package
        # Test python program and wheel...
        - cp *.whl ../tubex_lib-X.X.X-cp38-cp38-win_amd64.whl
        - pip install ../tubex_lib-X.X.X-cp38-cp38-win_amd64.whl
        - python ../examples/tuto/01_getting_started/01_getting_started.py
        - cd ..
        # Test C++ program and bundle...
        - wget http://www.ensta-bretagne.fr/lebars/Share/tubex_test_win.zip -nv
        - 7z x tubex_test_win.zip -y
        - rm -Rf tubex_test_win.zip
        - cd tubex_test_win
        - rm -Rf ibex tubex ReadMe.txt
        - cp -Rf ../ibex .
        - cp -Rf ../tubex .
        - cd ..
        - 7z a -y tubex_test_x64_vc16.zip tubex_test_win
        - cd tubex_test_win/test
        - cmake -G "Visual Studio 16" -A x64 .
        - cmake --build . --config Release
        - cmd //c "Release\my_project.exe"
        - cd ../..
    - name: "Windows Visual Studio 2017 x86 C++"
      os: windows
      before_install: 
        - choco install -y winflexbison
      cache:
      install:
      script: 
        - if [ ! -e "ibex/include/ibex.h" ]; then ( git clone -b develop https://github.com/lebarsfa/ibex-lib.git ; cd ibex-lib ; mkdir build ; cd build ; cmake -G "Visual Studio 15" -A Win32 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_INSTALL_PREFIX="../../ibex" -D INTERVAL_LIB=filib .. ; cmake --build . --config Release --target install ; cd ../.. ) else echo "Using cached directory." ; fi
        - mkdir build ; cd build
        - cmake -G "Visual Studio 15" -A Win32 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_PREFIX_PATH="ibex" -D CMAKE_INSTALL_PREFIX="../tubex" ..
        - cmake --build . --config Debug --target install
        - cd ..
        # Test C++ program and bundle...
        - wget http://www.ensta-bretagne.fr/lebars/Share/tubex_test_win.zip -nv
        - 7z x tubex_test_win.zip -y
        - rm -Rf tubex_test_win.zip
        - cd tubex_test_win
        - rm -Rf ibex tubex ReadMe.txt
        - cp -Rf ../ibex .
        - cp -Rf ../tubex .
        - cd ..
        - 7z a -y tubex_test_x86_vc15.zip tubex_test_win
        - cd tubex_test_win/test
        - cmake -G "Visual Studio 15" -A Win32 .
        - cmake --build . --config Release
        - cmd //c "Release\my_project.exe"
        - cd ../..
    - name: "Windows Visual Studio 2017 x64 C++ Python 3.7"
      os: windows
      before_install: 
        - choco install -y winflexbison
        - cmd //c "choco install -y doxygen.install graphviz & choco install -y python --version=3.7.7 & refreshenv.cmd & python -m pip install --upgrade pip & pip install --upgrade pyIbex & pip install --upgrade wheel setuptools & git clone -b v3.1.1 ttps://github.com/sphinx-doc/sphinx & cd sphinx & pip install . & pip install --upgrade breathe sphinx-tabs sphinx_rtd_theme & refreshenv.cmd"
        - export PATH=/c/Python37:/c/Python37/Scripts:$PATH
      cache:
      install:
      script: 
        - if [ ! -e "ibex/include/ibex.h" ]; then ( git clone -b develop https://github.com/lebarsfa/ibex-lib.git ; cd ibex-lib ; mkdir build ; cd build ; cmake -G "Visual Studio 15" -A x64 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_INSTALL_PREFIX="../../ibex" -D INTERVAL_LIB=filib .. ; cmake --build . --config Release --target install ; cd ../.. ) else echo "Using cached directory." ; fi
        - mkdir build ; cd build
        - cmake -G "Visual Studio 15" -A x64 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_PREFIX_PATH="ibex" -D CMAKE_INSTALL_PREFIX="../tubex" -D WITH_PYTHON=ON ..
        - cmake --build . --config Debug --target api
        - cmake -G "Visual Studio 15" -A x64 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_PREFIX_PATH="ibex" -D CMAKE_INSTALL_PREFIX="../tubex" -D WITH_PYTHON=ON ..
        - cmake --build . --config Debug --target install
        - cmake --build . --config Debug --target pip_package
        # Test python program and wheel...
        - cp *.whl ../tubex_lib-X.X.X-cp37-cp37m-win_amd64.whl
        - pip install ../tubex_lib-X.X.X-cp37-cp37m-win_amd64.whl
        - python ../examples/tuto/01_getting_started/01_getting_started.py
        - cd ..
        # Test C++ program and bundle...
        - wget http://www.ensta-bretagne.fr/lebars/Share/tubex_test_win.zip -nv
        - 7z x tubex_test_win.zip -y
        - rm -Rf tubex_test_win.zip
        - cd tubex_test_win
        - rm -Rf ibex tubex ReadMe.txt
        - cp -Rf ../ibex .
        - cp -Rf ../tubex .
        - cd ..
        - 7z a -y tubex_test_x64_vc15.zip tubex_test_win
        - cd tubex_test_win/test
        - cmake -G "Visual Studio 15" -A x64 .
        - cmake --build . --config Release
        - cmd //c "Release\my_project.exe"
        - cd ../..
    - name: "Windows Visual Studio 2015 x86 C++ Python 3.6"
      os: windows
      before_install: 
        - choco install -y vcbuildtools -ia "/InstallSelectableItems Win81SDK_CppBuildSKUV1;VisualCppBuildTools_ATLMFC_SDK" winflexbison
        - cmd //c "choco install -y doxygen.install graphviz & choco install -y python --version=3.6.8 --x86 & refreshenv.cmd & python -m pip install --upgrade pip & pip install --upgrade pyIbex & pip install --upgrade wheel setuptools & git clone -b 3.1.1 https://github.com/sphinx-doc/sphinx & cd sphinx & pip install . & pip install --upgrade breathe sphinx-tabs sphinx_rtd_theme & refreshenv.cmd"
        - export PATH=/c/Python36:/c/Python36/Scripts:$PATH
      cache:
      install:
      script: 
        - if [ ! -e "ibex/include/ibex.h" ]; then ( git clone -b develop https://github.com/lebarsfa/ibex-lib.git ; cd ibex-lib ; mkdir build ; cd build ; cmake -G "Visual Studio 14" -A Win32 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_INSTALL_PREFIX="../../ibex" -D INTERVAL_LIB=filib .. ; cmake --build . --config Release --target install ; cd ../.. ) else echo "Using cached directory." ; fi
        - mkdir build ; cd build
        - cmake -G "Visual Studio 14" -A Win32 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_PREFIX_PATH="ibex" -D CMAKE_INSTALL_PREFIX="../tubex" -D WITH_PYTHON=ON ..
        - cmake --build . --config Debug --target api
        - cmake -G "Visual Studio 14" -A Win32 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_PREFIX_PATH="ibex" -D CMAKE_INSTALL_PREFIX="../tubex" -D WITH_PYTHON=ON ..
        - cmake --build . --config Debug --target install
        - cmake --build . --config Debug --target pip_package
        # Test python program and wheel...
        - cp *.whl ../tubex_lib-X.X.X-cp36-cp36m-win32.whl
        - pip install ../tubex_lib-X.X.X-cp36-cp36m-win32.whl
        - python ../examples/tuto/01_getting_started/01_getting_started.py
        - cd ..
        # Test C++ program and bundle...
        - wget http://www.ensta-bretagne.fr/lebars/Share/tubex_test_win.zip -nv
        - 7z x tubex_test_win.zip -y
        - rm -Rf tubex_test_win.zip
        - cd tubex_test_win
        - rm -Rf ibex tubex ReadMe.txt
        - cp -Rf ../ibex .
        - cp -Rf ../tubex .
        - cd ..
        - 7z a -y tubex_test_x86_vc14.zip tubex_test_win
        - cd tubex_test_win/test
        - cmake -G "Visual Studio 14" -A Win32 .
        - cmake --build . --config Release
        - cmd //c "Release\my_project.exe"
        - cd ../..
    - name: "Windows Visual Studio 2015 x86 Python 3.4"
      os: windows
      before_install: 
        - choco install -y vcbuildtools -ia "/InstallSelectableItems Win81SDK_CppBuildSKUV1;VisualCppBuildTools_ATLMFC_SDK" winflexbison
        - cmd //c "choco install -y doxygen.install graphviz & choco install -y python --version=3.4.4.20200110 --x86 & refreshenv.cmd & set PATH=C:\Python34;C:\Python34\Scripts;%PATH% & python -m pip install --upgrade pip==19.1.1 & pip install --upgrade yIbex & pip install --upgrade wheel setuptools & refreshenv.cmd"
        - export PATH=/c/Python34:/c/Python34/Scripts:$PATH
      cache:
      install:
      script: 
        - if [ ! -e "ibex/include/ibex.h" ]; then ( git clone -b develop https://github.com/lebarsfa/ibex-lib.git ; cd ibex-lib ; mkdir build ; cd build ; cmake -G "Visual Studio 14" -A Win32 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_INSTALL_PREFIX="../../ibex" -D INTERVAL_LIB=filib .. ; cmake --build . --config Release --target install ; cd ../.. ) else echo "Using cached directory." ; fi
        - mkdir build ; cd build
        - cmake -G "Visual Studio 14" -A Win32 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_PREFIX_PATH="ibex" -D CMAKE_INSTALL_PREFIX="../tubex" -D WITH_PYTHON=ON ..
        - cmake --build . --config Debug --target api
        - cmake -G "Visual Studio 14" -A Win32 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_PREFIX_PATH="ibex" -D CMAKE_INSTALL_PREFIX="../tubex" -D WITH_PYTHON=ON ..
        - cmake --build . --config Debug --target install
        - cmake --build . --config Debug --target pip_package
        # Test python program and wheel...
        - cp *.whl ../tubex_lib-X.X.X-cp34-cp34m-win32.whl
        - pip install ../tubex_lib-X.X.X-cp34-cp34m-win32.whl
        - python ../examples/tuto/01_getting_started/01_getting_started.py
        - cd ..
    - name: "Windows Visual Studio 2015 x64 C++ Python 3.6"
      os: windows
      before_install: 
        - choco install -y vcbuildtools -ia "/InstallSelectableItems Win81SDK_CppBuildSKUV1;VisualCppBuildTools_ATLMFC_SDK" winflexbison
        - cmd //c "choco install -y doxygen.install graphviz & choco install -y python --version=3.6.8 & refreshenv.cmd & python -m pip install --upgrade pip & pip install --upgrade pyIbex & pip install --upgrade wheel setuptools & git clone -b v3.1.1 ttps://github.com/sphinx-doc/sphinx & cd sphinx & pip install . & pip install --upgrade breathe sphinx-tabs sphinx_rtd_theme & refreshenv.cmd"
        - export PATH=/c/Python36:/c/Python36/Scripts:$PATH
      cache:
      install:
      script: 
        - if [ ! -e "ibex/include/ibex.h" ]; then ( git clone -b develop https://github.com/lebarsfa/ibex-lib.git ; cd ibex-lib ; mkdir build ; cd build ; cmake -G "Visual Studio 14" -A x64 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_INSTALL_PREFIX="../../ibex" -D INTERVAL_LIB=filib .. ; cmake --build . --config Release --target install ; cd ../.. ) else echo "Using cached directory." ; fi
        - mkdir build ; cd build
        - cmake -G "Visual Studio 14" -A x64 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_PREFIX_PATH="ibex" -D CMAKE_INSTALL_PREFIX="../tubex" -D WITH_PYTHON=ON ..
        - cmake --build . --config Debug --target api
        - cmake -G "Visual Studio 14" -A x64 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_PREFIX_PATH="ibex" -D CMAKE_INSTALL_PREFIX="../tubex" -D WITH_PYTHON=ON ..
        - cmake --build . --config Debug --target install
        - cmake --build . --config Debug --target pip_package
        # Test python program and wheel...
        - cp *.whl ../tubex_lib-X.X.X-cp36-cp36m-win_amd64.whl
        - pip install ../tubex_lib-X.X.X-cp36-cp36m-win_amd64.whl
        - python ../examples/tuto/01_getting_started/01_getting_started.py
        - cd ..
        # Test C++ program and bundle...
        - wget http://www.ensta-bretagne.fr/lebars/Share/tubex_test_win.zip -nv
        - 7z x tubex_test_win.zip -y
        - rm -Rf tubex_test_win.zip
        - cd tubex_test_win
        - rm -Rf ibex tubex ReadMe.txt
        - cp -Rf ../ibex .
        - cp -Rf ../tubex .
        - cd ..
        - 7z a -y tubex_test_x64_vc14.zip tubex_test_win
        - cd tubex_test_win/test
        - cmake -G "Visual Studio 14" -A x64 .
        - cmake --build . --config Release
        - cmd //c "Release\my_project.exe"
        - cd ../..
    - name: "Windows Visual Studio 2015 x64 Python 3.5"
      os: windows
      before_install: 
        - choco install -y vcbuildtools -ia "/InstallSelectableItems Win81SDK_CppBuildSKUV1;VisualCppBuildTools_ATLMFC_SDK" winflexbison
        - cmd //c "choco install -y doxygen.install graphviz & choco install -y python --version=3.5.4.20200110 & refreshenv.cmd & python -m pip install --upgrade pip & pip install --upgrade pyIbex & pip install --upgrade wheel setuptools & git clone -b 3.1.1 https://github.com/sphinx-doc/sphinx & cd sphinx & pip install . & pip install --upgrade breathe sphinx-tabs sphinx_rtd_theme & refreshenv.cmd"
        - export PATH=/c/Python35:/c/Python35/Scripts:$PATH
      cache:
      install:
      script: 
        - if [ ! -e "ibex/include/ibex.h" ]; then ( git clone -b develop https://github.com/lebarsfa/ibex-lib.git ; cd ibex-lib ; mkdir build ; cd build ; cmake -G "Visual Studio 14" -A x64 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_INSTALL_PREFIX="../../ibex" -D INTERVAL_LIB=filib .. ; cmake --build . --config Release --target install ; cd ../.. ) else echo "Using cached directory." ; fi
        - mkdir build ; cd build
        - cmake -G "Visual Studio 14" -A x64 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_PREFIX_PATH="ibex" -D CMAKE_INSTALL_PREFIX="../tubex" -D WITH_PYTHON=ON ..
        - cmake --build . --config Debug --target api
        - cmake -G "Visual Studio 14" -A x64 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_PREFIX_PATH="ibex" -D CMAKE_INSTALL_PREFIX="../tubex" -D WITH_PYTHON=ON ..
        - cmake --build . --config Debug --target install
        - cmake --build . --config Debug --target pip_package
        # Test python program and wheel...
        - cp *.whl ../tubex_lib-X.X.X-cp35-cp35m-win_amd64.whl
        - pip install ../tubex_lib-X.X.X-cp35-cp35m-win_amd64.whl
        - python ../examples/tuto/01_getting_started/01_getting_started.py
        - cd ..
    - name: "Windows Visual Studio 2015 x64 Python 3.4"
      os: windows
      before_install: 
        - choco install -y vcbuildtools -ia "/InstallSelectableItems Win81SDK_CppBuildSKUV1;VisualCppBuildTools_ATLMFC_SDK" winflexbison
        - cmd //c "choco install -y doxygen.install graphviz & choco install -y python --version=3.4.4.20200110 & refreshenv.cmd & set PATH=C:\Python34;C:\Python34\Scripts;%PATH% & python -m pip install --upgrade pip==19.1.1 & pip install --upgrade pyIbex& pip install --upgrade wheel setuptools & refreshenv.cmd"
        - export PATH=/c/Python34:/c/Python34/Scripts:$PATH
      cache:
      install:
      script: 
        - if [ ! -e "ibex/include/ibex.h" ]; then ( git clone -b develop https://github.com/lebarsfa/ibex-lib.git ; cd ibex-lib ; mkdir build ; cd build ; cmake -G "Visual Studio 14" -A x64 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_INSTALL_PREFIX="../../ibex" -D INTERVAL_LIB=filib .. ; cmake --build . --config Release --target install ; cd ../.. ) else echo "Using cached directory." ; fi
        - mkdir build ; cd build
        - cmake -G "Visual Studio 14" -A x64 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_PREFIX_PATH="ibex" -D CMAKE_INSTALL_PREFIX="../tubex" -D WITH_PYTHON=ON ..
        - cmake --build . --config Debug --target api
        - cmake -G "Visual Studio 14" -A x64 -D CMAKE_CXX_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_C_FLAGS=" /D WIN32 /EHsc /D _CRT_SECURE_NO_WARNINGS /wd4267 /wd4244 /wd4305" -D CMAKE_PREFIX_PATH="ibex" -D CMAKE_INSTALL_PREFIX="../tubex" -D WITH_PYTHON=ON ..
        - cmake --build . --config Debug --target install
        - cmake --build . --config Debug --target pip_package
        # Test python program and wheel...
        - cp *.whl ../tubex_lib-X.X.X-cp34-cp34m-win_amd64.whl
        - pip install ../tubex_lib-X.X.X-cp34-cp34m-win_amd64.whl
        - python ../examples/tuto/01_getting_started/01_getting_started.py
        - cd ..
    - name: "Windows Qt 5.12.6 MinGW 7.3.0 x86"
      os: windows
      before_install: 
        - choco uninstall -y mingw
        # Need to free up disk space...
        - df
        - rm -Rf "/C/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools" || true
        - df
        - rm -Rf "/C/Program Files (x86)/Windows Kits" || true
        - df
        - rm -Rf "/C/Windows/SoftwareDistribution" || true
        - df
        - choco install -y winflexbison make patch
        - wget http://download.qt.io/archive/qt/5.12/5.12.6/qt-opensource-windows-x86-5.12.6.exe --no-check-certificate -nv
        - cmd //c "move /Y qt-opensource-windows-x86-5.12.6.exe %SystemDrive%\ "
        - wget http://www.ensta-bretagne.fr/lebars/Share/qt-installer-5.12.6-mingw73_32.qs --no-check-certificate -nv
        - cmd //c "move /Y qt-installer-5.12.6-mingw73_32.qs %SystemDrive%\ "
        - cmd //c netsh advfirewall set allprofiles state on
        - cmd //c netsh advfirewall firewall add rule name="Qt offline installer" dir=out action=block program="%SystemDrive%\qt-opensource-windows-x86-5.12.6.exe" enable=yes
        # Take several min... 
        - cmd //c "%SystemDrive%\qt-opensource-windows-x86-5.12.6.exe --script %SystemDrive%\qt-installer-5.12.6-mingw73_32.qs"
        - cmd //c netsh advfirewall firewall del rule name="Qt offline installer"
        - cmd //c netsh advfirewall set allprofiles state off
        - cmd //c "del /f /q %SystemDrive%\qt-opensource-windows-x86-5.12.6.exe"
        - df
        - export PATH=/c/Qt/Qt5.12.6/Tools/mingw730_32/bin:$PATH
      cache:
      install:
      script: 
        - if [ ! -e "ibex/include/ibex.h" ]; then ( git clone -b develop https://github.com/lebarsfa/ibex-lib.git ; cd ibex-lib ; mkdir build ; cd build ; cmake -G "MSYS Makefiles" -D CMAKE_INSTALL_PREFIX="../../ibex" -D CMAKE_CXX_FLAGS="-fPIC" -D CMAKE_C_FLAGS="-fPIC" -D INTERVAL_LIB=filib .. ; cmake --build . --target install ; cd ../.. ) else echo "Using cached directory." ; fi
        - mkdir build ; cd build
        - cmake -G "MSYS Makefiles" -D CMAKE_PREFIX_PATH="ibex" -D CMAKE_INSTALL_PREFIX="../tubex" ..
        - cmake --build . --target install
        - cd ..
        # Test C++ program and bundle...
        - wget http://www.ensta-bretagne.fr/lebars/Share/tubex_test_win.zip -nv
        - 7z x tubex_test_win.zip -y
        - rm -Rf tubex_test_win.zip
        - cd tubex_test_win
        - rm -Rf ibex tubex
        - cp -Rf ../ibex .
        - cp -Rf ../tubex .
        - cd ..
        - 7z a -y tubex_test_x86_mingw7.zip tubex_test_win
        - cd tubex_test_win/test
        - cmake -G "MSYS Makefiles" .
        - cmake --build .
        - ./my_project.exe
        - cd ../..
    - name: "Windows MinGW 8.1.0 x64"
      os: windows
      before_install: 
        - choco install -y winflexbison make patch
      cache:
        directories:
          - tubex_test_x64_mingw8
      install:
      script: 
        - if [ ! -e "tubex_test_x64_mingw8/ibex/include/ibex.h" ]; then ( git clone -b develop https://github.com/lebarsfa/ibex-lib.git ; cd ibex-lib ; mkdir build ; cd build ; cmake -G "MSYS Makefiles" -D CMAKE_INSTALL_PREFIX="../../ibex" -D CMAKE_CXX_FLAGS="-fPIC" -D CMAKE_C_FLAGS="-fPIC" -D INTERVAL_LIB=filib .. ; cmake --build . --target install ; cd ../.. ; ) else ( echo "Using cached directory." ; cp -Rf tubex_test_x64_mingw8/ibex . ) fi
        - mkdir build ; cd build
        - cmake -G "MSYS Makefiles" -D CMAKE_PREFIX_PATH="ibex" -D CMAKE_INSTALL_PREFIX="../tubex" ..
        - cmake --build . --target install
        - cd ..
        # Test C++ program and bundle...
        - wget http://www.ensta-bretagne.fr/lebars/Share/tubex_test_win.zip -nv
        - 7z x tubex_test_win.zip -y
        - rm -Rf tubex_test_win.zip
        - cd tubex_test_win
        - rm -Rf ibex tubex
        - cp -Rf ../ibex .
        - cp -Rf ../tubex .
        - cd ..
        - 7z a -y tubex_test_x64_mingw8.zip tubex_test_win
        - cd tubex_test_win/test
        - cmake -G "MSYS Makefiles" .
        - cmake --build .
        - ./my_project.exe
        - cd ../..
        - mv -f tubex_test_win tubex_test_x64_mingw8

# Configuration for C++ tests:

before_install:
  - eval "${MATRIX_EVAL}"

cache:
  directories:
    - $HOME/capd
    - $HOME/ibex-lib

install:
  
  # For documentation
  - sudo apt-get install python3.5 python3-setuptools python3-pip
  - sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.5 1 # using python3 as default version
  - sudo python3 -m pip install sphinx_rtd_theme breathe sphinx-tabs
  - sudo apt-get install python3-sphinx doxygen graphviz

  # For Python wrapping
  #- sudo python3 -m pip install wheel
  #- sudo python3 -m pip install --upgrade pip
  #- sudo python3 -m pip install pyibex
  #- sudo python3 -m pip install --upgrade pyibex==1.8.0

  - pwd
  - ls
  - export ORIGIN_DIR=$PWD
  - cd ..
  - pwd
  - ls
  - cd $ORIGIN_DIR

  # IBEX
  - bash scripts/dependencies/install_ibex.sh

  # CAPD
  - bash scripts/dependencies/install_capd.sh

  # Environment variables
  - export CMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH:$HOME/tubex-lib/build_install
  - export CMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH:$HOME/ibex-lib/build_install
  - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib

script:

  #- py_version=$(python -c "import sys; print(sys.version[:3])") # default python version
  #- echo "$py_version"
  
  - cd $ORIGIN_DIR
  - pwd
  - ls
  #- git submodule init ; git submodule update # for pybind11 submodule
  - mkdir build -p
  - cd build
  
  # Without synthesis tree

  # Building lib + tests
  - cmake -DCMAKE_INSTALL_PREFIX=$HOME/tubex-lib/build_install
          -DCMAKE_PREFIX_PATH=$HOME/ibex-lib/build_install
          -DWITH_PYTHON=OFF
          -DBUILD_TESTS=ON
          -DWITH_TUBE_TREE=OFF
          -DWITH_CAPD=ON
          -DTEST_EXAMPLES=ON ..
  - make api
  # Again for doxygen2docstring
  - cmake -DCMAKE_INSTALL_PREFIX=$HOME/tubex-lib/build_install
          -DCMAKE_PREFIX_PATH=$HOME/ibex-lib/build_install
          -DWITH_PYTHON=OFF
          -DBUILD_TESTS=ON
          -DWITH_TUBE_TREE=OFF
          -DWITH_CAPD=ON
          -DTEST_EXAMPLES=ON ..
  ##-DPYTHON_EXECUTABLE=/usr/bin/python3.5 ..
  - make
  - make doc
  - make install
  #- cd python/python_package
  #- /usr/bin/python3.5 setup.py develop --user
  #- /usr/bin/python3.5 pytubex/tests/test_arithmetic.py 
  #- cd ../../

  # Building the examples
  - cd ../examples
  - find . -type d -name build -prune -exec rm -rf {} \;
  - cd basics
  - find . -name "ex\_*" | xargs -L 1 bash -c 'cd "$0" && ./build.sh && cd ..'
  - cd ../robotics
  - find . -name "ex\_*" | xargs -L 1 bash -c 'cd "$0" && ./build.sh && cd ..'
  - cd ../tuto
  - find . * -maxdepth 0 | grep -P "^[0-9]" | xargs -L 1 bash -c 'cd "$0" && ./build.sh && cd ..'
  - cd ../lie_group
  - find . -name "ex\_*" | xargs -L 1 bash -c 'cd "$0" && ./build.sh && cd ..'
  - cd ../../build

  # Testing
  - make test
  - ./../examples/tuto/05_dyn_rangebearing/build/05_dyn_rangebearing
    
  # With synthesis tree for all created tubes
  
  # Building lib + tests
  - cmake -DCMAKE_INSTALL_PREFIX=$HOME/tubex-lib/build_install
          -DCMAKE_PREFIX_PATH=$HOME/ibex-lib/build_install
          -DWITH_PYTHON=OFF
          -DBUILD_TESTS=ON
          -DWITH_TUBE_TREE=ON
          -DWITH_CAPD=ON
          -DTEST_EXAMPLES=ON ..
  - make api
  # Again for doxygen2docstring
  - cmake -DCMAKE_INSTALL_PREFIX=$HOME/tubex-lib/build_install
          -DCMAKE_PREFIX_PATH=$HOME/ibex-lib/build_install
          -DWITH_PYTHON=OFF
          -DBUILD_TESTS=ON
          -DWITH_TUBE_TREE=ON
          -DWITH_CAPD=ON
          -DTEST_EXAMPLES=ON ..
  ##-DPYTHON_EXECUTABLE=/usr/bin/python3.5 ..
  - make
  - make doc
  - make install
  #- cd python/python_package
  #- /usr/bin/python3.5 setup.py develop --user
  #- /usr/bin/python3.5 pytubex/tests/test_arithmetic.py 
  #- cd ../../

  # Building the examples
  - cd ../examples
  - find . -type d -name build -prune -exec rm -rf {} \;
  - cd basics
  - find . -name "ex\_*" | xargs -L 1 bash -c 'cd "$0" && ./build.sh && cd ..'
  - cd ../robotics
  - find . -name "ex\_*" | xargs -L 1 bash -c 'cd "$0" && ./build.sh && cd ..'
  - cd ../tuto
  - find . * -maxdepth 0 | grep -P "^[0-9]" | xargs -L 1 bash -c 'cd "$0" && ./build.sh && cd ..'
  - cd ../lie_group
  - find . -name "ex\_*" | xargs -L 1 bash -c 'cd "$0" && ./build.sh && cd ..'
  - cd ../../build

  # Testing
  - make test
  - ./../examples/tuto/05_dyn_rangebearing/build/05_dyn_rangebearing

deploy:
  - provider: releases
    api_key:
      secure: ILyVRxUJHYAYHY6aGeY0QSVpwRF/Nm5piue7jkOArZXvwwjavPT8Gm/ZpXeor5rOQV/7rY4ACoOgMyhcFFKrL7BnKmzJUPPGyLez6aZz5ZT0I7YsQIG9CPPko0nIihSOircAjii8XaYwTntFAL9AqCgQk2PQ9HajzhbQrur4RPXFIwhJd9DDSCf8gO1WRyqRkL3gZSaq3GjQP++ZGFR9S5YlpCWVaG88Vq+ygrR9894tQ2on8FnOeE4bS768I36yT/w8IzES2o3oDh1bVECI2oEkwb2IYL5J5si1b0Wo6ZQdKNLu/50mohHbtKYzGfWiliRMXikXVwSXA/Y5G8ou1SCNLb7fM1s2E8KpjeOBHJJzC6syYaQzRZ611Srt3DpdlFa+s4aivgaKQ+AK+gromXwinE61FLEpUMglu7+3jFs6sMNNeYLgpGLjpnquyClljHmms79gm3T7dCm8C5ZFsyCDJq3ETEGDfIxN256dqLE6nu/oWuU6koQ3aMlVytMKG/veMb+jJY/J+f7upkUIBDtw0RKxk08gKX84wnl2brcHOOWAkSxcRINe/KUVDoR/7B3LAiarOyglazdEfRAmTE2o+te82/T0Wv0LoBn5/zXHZvtlpJYDuXndJ8HB8NWQl7sLOiqh4KbYkoyjPt9bn5XHvbQM/E7LLYIzpiOWPT4=
    on:
      repo: lebarsfa/tubex-lib
      all_branches: true
    skip_cleanup: true
    overwrite: true
    draft: true
    prerelease: true
    file_glob: true
    file: 
      - "*.zip"
      - "*.whl"
      - "wheelhouse/*.whl"
  - provider: releases
    api_key:
      secure: Y+ZO/wvqZp29/cSnAqJKOAybSGlu8ALDsPS63zQXPtUSiUejfnoDLi77ANlHxUF7MhXlo38VanwYR/jGnXeCUPtX1Seg8W2v1mXFNaUKCki/bkEeLtK2uXAD5flxoBULPYcdspNbGlyzohxOZgr7VFNk0TkIg7jSlUkGuSAlJy81qh6ctVFtKhTsLDwi8ZKenwFFmlBNzw3dXR5c9AloBSCLRfWlwq2INYeEfgkItBMIe+7jh7RaacXoNrV/JkUQNcp4W5wA/zgMkOXqXSf7LPRIXd80zCgCmZ+ODqKTVHx5gXZxUPvW3cAtsm7RU4VNwpXiC2ckNRpLcCF8/dav3XG2hZrddUzvEXbrePnONrNQHrdszVokkQoJBYPFsZuUR4lDqV25aGVEvsn5tnBfIH6Rf2abF+pUkuKnWFqCO71kfwPBY5wKHi2SdaKVcZm06jD1tp87OuOt4T0DPBs4/SyQ7925eXk4Ol0MwCsGj1Pml+R90khq74xFe48KOxXLIYxHOqBO600HL3dYVrpQTZ/3rDpiTKlyGn8he+K7gCHFlJ85uBgp89cQei8aUOACLKhecT/rZqPIoZNsDe28AtDrj5LeLYeGSQDlukjukYfKcZF10itcSF8UusgNfexuLUPz5BUf2xrNF0cCFOAzP0auhgxRLC9VPGdEzvY0N1c=
    on:
      repo: SimonRohou/tubex-lib
      all_branches: true
    skip_cleanup: true
    overwrite: true
    draft: true
    prerelease: true
    file_glob: true
    file: 
      - "*.zip"
      - "*.whl"
      - "wheelhouse/*.whl"
